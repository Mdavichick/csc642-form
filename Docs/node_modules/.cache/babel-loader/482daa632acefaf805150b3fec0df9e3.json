{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micha\\\\Documents\\\\csc642-form\\\\src\\\\components\\\\GoogleMaps.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, useJsApiLoader } from '@react-google-maps/api';\nimport MapStyles from '../MapStyles';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '300px',\n  height: '300px'\n};\nconst center = {\n  lat: 37.774929,\n  lng: -122.419418\n};\nconst options = {\n  styles: MapStyles,\n  disableDefaultUI: true // zoomControl: true,\n\n};\nconst state = {\n  lname: localStorage.getItem('lname'),\n  fname: localStorage.getItem('fname'),\n  title: localStorage.getItem('title'),\n  heightinch: localStorage.getItem('heightinch'),\n  heightfeet: localStorage.getItem('heightfeet'),\n  pnumber: localStorage.getItem('pnumber'),\n  addcity: localStorage.getItem('addcity'),\n  addstate: localStorage.getItem('addstate'),\n  addzip: localStorage.getItem('addzip'),\n  email: localStorage.getItem('email')\n};\nexport function Google() {\n  _s();\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyCKpHxuTD87SuiNqWf6Q-B5PIeWOuKuXT0',\n    libraries\n  });\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\"; // <div className =\"container\">\n  // <div className=\"app-wrapper\">\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showaddress\",\n      children: [localStorage.getItem('addcity'), \",\", localStorage.getItem('addstate'), \",\", localStorage.getItem('addzip'), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        className: \"Test\",\n        mapContainerStyle: mapContainerStyle,\n        zoom: 13,\n        center: center,\n        options: options,\n        onLoad: onMapLoad,\n        onClick: event => {\n          console.log(event);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Google, \"2jsTxyS+4dm3AQRUt2A1F7YLt2M=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Google;\n\nvar _c;\n\n$RefreshReg$(_c, \"Google\");","map":{"version":3,"sources":["C:/Users/Micha/Documents/csc642-form/src/components/GoogleMaps.js"],"names":["React","Component","GoogleMap","useLoadScript","Marker","InfoWindow","useJsApiLoader","MapStyles","usePlacesAutocomplete","getGeocode","getLatLng","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","state","lname","localStorage","getItem","fname","title","heightinch","heightfeet","pnumber","addcity","addstate","addzip","email","Google","mapRef","useRef","onMapLoad","useCallback","map","current","isLoaded","loadError","googleMapsApiKey","event","console","log"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, useJsApiLoader } from '@react-google-maps/api';\r\nimport MapStyles from '../MapStyles';\r\n\r\nimport usePlacesAutocomplete, {getGeocode, getLatLng,} from \"use-places-autocomplete\";\r\n\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle ={\r\n    width: '300px',\r\n    height: '300px',\r\n}\r\nconst center ={\r\n    lat:37.774929,\r\n    lng: -122.419418,\r\n}\r\nconst options ={\r\n    styles: MapStyles,\r\n    disableDefaultUI: true,\r\n    // zoomControl: true,\r\n}\r\nconst state ={\r\n    lname: localStorage.getItem('lname'),\r\n    fname:localStorage.getItem('fname'),\r\n    title:localStorage.getItem('title'),\r\n    heightinch:localStorage.getItem('heightinch'),\r\n    heightfeet:localStorage.getItem('heightfeet'),\r\n    pnumber:localStorage.getItem('pnumber'),\r\n    addcity:localStorage.getItem('addcity'),\r\n    addstate:localStorage.getItem('addstate'),\r\n    addzip:localStorage.getItem('addzip'),\r\n    email:localStorage.getItem('email'),\r\n  }\r\n\r\n\r\n  \r\nexport function Google(){\r\n    const mapRef = React.useRef();\r\n    const onMapLoad= React.useCallback((map) =>{\r\n        mapRef.current = map;\r\n    }, [])\r\n\r\n    const {isLoaded, loadError} = useLoadScript({\r\n        googleMapsApiKey: 'AIzaSyCKpHxuTD87SuiNqWf6Q-B5PIeWOuKuXT0',\r\n        libraries,\r\n    })\r\n\r\n    if(loadError) return \"Error loading maps\";\r\n    if(!isLoaded) return \"Loading Maps\";\r\n    \r\n\r\n    // <div className =\"container\">\r\n    // <div className=\"app-wrapper\">\r\n    return<div className =\"app-wrapper\">\r\n        \r\n        \r\n        <div className=\"showaddress\">\r\n        {localStorage.getItem('addcity')},{localStorage.getItem('addstate')},{localStorage.getItem('addzip')}\r\n        <GoogleMap \r\n        className = \"Test\"\r\n        mapContainerStyle={mapContainerStyle} \r\n        zoom={13} \r\n        center = {center}\r\n        options = {options}\r\n        onLoad={onMapLoad}\r\n        onClick={(event)=>{\r\n            console.log(event);\r\n        }}\r\n        ></GoogleMap>\r\n        </div></div>\r\n        \r\n}\r\n"]},"metadata":{},"sourceType":"module"}